
import { Community, CommunityState } from "../../atoms/CommunitiesAtom";
import About from "../../components/Community/About";
import CreatePostLink from "../../components/Community/CreatePostLink";
import Header from "../../components/Community/Header";
import NotFound from "../../components/Community/NotFound";
import PageContent from "../../components/Layout/PageContent";
import Posts from "../../components/posts/Posts";
import { firestore } from "../../firebase/clientApp";
import { getGroupData } from "../../../apis/groups";
import { Tabs, TabList, TabPanels, Tab, TabPanel, Stack, Tag, Avatar, TagLabel, Divider, TagLeftIcon } from '@chakra-ui/react'



import { Flex } from "@chakra-ui/react";
import { motion } from "framer-motion";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import MainContainer from "../../components/profilePage/MainContainer";
import { useRouter } from "next/router";
import userProfile from "@/hooks/userProfile";
import { userState } from "@/atoms/userAtom";
import { query } from "firebase/firestore";
import Category from "@/components/Community/Category";
import Card from "@/components/DocumentCard/DocumentCard";
import DocumentCard from "@/components/DocumentCard/DocumentCard";


import {
  Square3Stack3DIcon,
  UserCircleIcon,
  Cog6ToothIcon,
} from "@heroicons/react/24/solid";
import { AddIcon } from "@chakra-ui/icons";
export default function Page() {

  const [group, setGroup] = useState<Community>()

  const router = useRouter();
  const groupId = router.query.slug?.toString();

  const getGroup = async () => {
    if (groupId) {
      console.log("grid" + groupId);

      const groupData = await getGroupData(groupId);
      setGroup(groupData.data);
    }
  }

  useEffect(() => {
    getGroup();
    console.log("gr get data" + group);
  }, [groupId])
  return (
    <motion.div
      initial={{ opacity: 0 }}
      whileInView={{ opacity: 1 }}
      viewport={{ once: true }}
    >
      <Head>
        <title>Camp Scholar</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/images/header.png" />
      </Head>
      {group ?
        <>
          <Header communityData={group} />

          <Tabs isLazy>
            <TabList className="ml-5 mt-2 ">
              <Tag size={"md"} key={"md"} variant='subtle' rounded={0} colorScheme="telegram">
              
                <Tab className="font-bold">Bài viết</Tab>
              </Tag>
              <Divider orientation='vertical' />
              <Tag size={"md"} key={"md"} variant='subtle'rounded={0}  colorScheme='telegram'>
             
                <Tab className="font-bold">Tài liệu</Tab>
              </Tag>
              <Divider orientation='vertical' />
              <Tag size={"md"} key={"md"} variant='subtle'rounded={0}  colorScheme='telegram'>
             
             <Tab className="font-bold">Thành viên</Tab>
           </Tag>

            </TabList>
            <TabPanels>
              {/* initially mounted */}
              <TabPanel>
                <>
                  {/* <CreatePostLink groupID={group.groupId} /> */}
                  <PageContent>

                    <Posts communityData={group} />
                    <About communityData={group} />
                    <Category communityData={group}></Category>
                  </PageContent>
                </>
              </TabPanel>
              {/* initially not mounted */}
              <TabPanel>
                <Flex justify="center" p="16px 0px">
                  <Flex
                    width="100%"
                    justify="center"
                    maxWidth={true ? "1200px" : "860px"}
                  >
                    <Stack justify={"center"} gap={5} flexDirection={"row"} flexWrap={"wrap"}>
                      <DocumentCard ></DocumentCard>
                      <DocumentCard ></DocumentCard>
                      <DocumentCard ></DocumentCard>
                      <DocumentCard ></DocumentCard>
                      <DocumentCard ></DocumentCard>
                      <DocumentCard ></DocumentCard>
                    </Stack>
                  </Flex>
                </Flex>

              </TabPanel>
            </TabPanels>
          
          </Tabs>

        </> : ""}

    </motion.div>
  );
}

import {
  Divider,
  Tab,
  TabList,
  TabPanel,
  TabPanels,
  Tabs,
  Tag,
} from "@chakra-ui/react";
import { getGroupData } from "../../../apis/groups";
import { Community } from "../../atoms/CommunitiesAtom";
import About from "../../components/Community/About";
import Header from "../../components/Community/Header";
import PageContent from "../../components/Layout/PageContent";
import Posts from "../../components/posts/Posts";

import Category from "@/components/Community/Category";
import { Flex } from "@chakra-ui/react";
import { motion } from "framer-motion";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";

import CommunityMember from "@/components/Community/CommunityMember";
import DocumentBrowse from "@/components/DocumentCard/DocumentBrowse";
import DocumentGellary from "@/components/DocumentCard/DocumentGellary";
import { RootState } from "@/redux/store";
import { useSelector } from "react-redux";
export default function Page() {
  const [group, setGroup] = useState<Community>();
  const user = useSelector((state: RootState) => state.userInfor.currentUser);
  const [currentUser, setCurentUser] = useState<any>([]);
  const router = useRouter();
  const groupId = router.query.slug?.toString();

  const getGroup = async () => {
    if (groupId) {
      try {
        const groupData = await getGroupData(groupId);
        setGroup(groupData.data);
      } catch (error) {
        console.log(error);
      }
    }
  };

  useEffect(() => {
    getGroup();
  }, [groupId]);

  useEffect(() => {
    if (user != null) setCurentUser(user);
  }, [currentUser]);

  return (
    <motion.div
      initial={{ opacity: 0 }}
      whileInView={{ opacity: 1 }}
      viewport={{ once: true }}
    >
      <Head>
        <title>Camp Scholar</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/images/header.png" />
      </Head>
      {group ? (
        <>
          <Header communityData={group} />

          {currentUser.userName == group.hosts ? (
            <Tabs isLazy>
              <TabList className="ml-5 mt-2 ">
                <Tag
                  size={"md"}
                  key={"md"}
                  variant="subtle"
                  rounded={0}
                  colorScheme="telegram"
                >
                  <Tab className="font-bold">B√†i vi·∫øt üìù</Tab>
                </Tag>
                <Divider orientation="vertical" />
                <Tag
                  size={"md"}
                  key={"md"}
                  variant="subtle"
                  rounded={0}
                  colorScheme="telegram"
                >
                  <Tab className="font-bold">T√†i li·ªáu üìÑ</Tab>
                </Tag>
                <Divider orientation="vertical" />
                <Tag
                  size={"md"}
                  key={"md"}
                  variant="subtle"
                  rounded={0}
                  colorScheme="telegram"
                >
                  <Tab className="font-bold">Duy·ªát t√†i li·ªáu üìñ</Tab>
                </Tag>
                <Divider orientation="vertical" />
                <Tag
                  size={"md"}
                  key={"md"}
                  variant="subtle"
                  rounded={0}
                  colorScheme="telegram"
                >
                  <Tab className="font-bold">Th√†nh vi√™n üë•</Tab>
                </Tag>
              </TabList>
              <TabPanels>
                {/* initially mounted */}
                <TabPanel>
                  <>
                    {/* <CreatePostLink groupID={group.groupId} /> */}
                    <PageContent>
                      <Posts communityData={group} />
                      <About communityData={group} />
                      <Category communityData={group}></Category>
                    </PageContent>
                  </>
                </TabPanel>
                {/* initially not mounted */}
                <TabPanel>
                  <Flex justify="center" p="16px 0px">
                    <Flex
                      width="100%"
                      justify="center"
                      maxWidth={true ? "1200px" : "860px"}
                    >
                      <DocumentGellary
                        groupName={group.groupName}
                        groupID={group.groupId}
                      ></DocumentGellary>
                    </Flex>
                  </Flex>
                </TabPanel>
                <TabPanel>
                  <Flex justify="center" p="16px 0px">
                    <Flex
                      width="100%"
                      justify="center"
                      maxWidth={true ? "1200px" : "860px"}
                    >
                      <DocumentBrowse
                        groupName={group.groupName}
                        groupID={group.groupId}
                      ></DocumentBrowse>
                    </Flex>
                  </Flex>
                </TabPanel>
                <TabPanel>
                  <Flex justify="center" p="16px 0px">
                    <Flex
                      width="100%"
                      justify="center"
                      maxWidth={true ? "1200px" : "860px"}
                    >
                      <CommunityMember
                        groupHost={group.hosts}
                        groupID={group.groupId}
                      ></CommunityMember>
                    </Flex>
                  </Flex>
                </TabPanel>
              </TabPanels>
            </Tabs>
          ) : (
            <Tabs isLazy>
              <TabList className="ml-5 mt-2 ">
                <Tag
                  size={"md"}
                  key={"md"}
                  variant="subtle"
                  rounded={0}
                  colorScheme="telegram"
                >
                  <Tab className="font-bold">B√†i vi·∫øt üìù</Tab>
                </Tag>
                <Divider orientation="vertical" />
                <Tag
                  size={"md"}
                  key={"md"}
                  variant="subtle"
                  rounded={0}
                  colorScheme="telegram"
                >
                  <Tab className="font-bold">T√†i li·ªáu üìÑ</Tab>
                </Tag>
                <Divider orientation="vertical" />
                <Tag
                  size={"md"}
                  key={"md"}
                  variant="subtle"
                  rounded={0}
                  colorScheme="telegram"
                >
                  <Tab className="font-bold">Th√†nh vi√™n üë•</Tab>
                </Tag>
              </TabList>
              <TabPanels>
                {/* initially mounted */}
                <TabPanel>
                  <>
                    {/* <CreatePostLink groupID={group.groupId} /> */}
                    <PageContent>
                      <Posts communityData={group} />
                      <About communityData={group} />
                      <Category communityData={group}></Category>
                    </PageContent>
                  </>
                </TabPanel>
                {/* initially not mounted */}
                <TabPanel>
                  <Flex justify="center" p="16px 0px">
                    <Flex
                      width="100%"
                      justify="center"
                      maxWidth={true ? "1200px" : "860px"}
                    >
                      <DocumentGellary
                        groupName={group.groupName}
                        groupID={group.groupId}
                      ></DocumentGellary>
                    </Flex>
                  </Flex>
                </TabPanel>

                <TabPanel>
                  <Flex justify="center" p="16px 0px">
                    <Flex
                      width="100%"
                      justify="center"
                      maxWidth={true ? "1200px" : "860px"}
                    >
                      <CommunityMember
                        groupHost={group.hosts}
                        groupID={group.groupId}
                      ></CommunityMember>
                    </Flex>
                  </Flex>
                </TabPanel>
              </TabPanels>
            </Tabs>
          )}
        </>
      ) : (
        ""
      )}
    </motion.div>
  );
}
